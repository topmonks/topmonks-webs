version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.4.1
  aws-cloudfront: topmonks/aws-cloudfront@1.0.0
  aws-s3: circleci/aws-s3@2.0.0
  browser-tools: circleci/browser-tools@1.1.3
  docker: circleci/docker@1.5.0
  github: topmonks/github@1.0.2
  node: circleci/node@4.2.1
  pulumi: pulumi/pulumi@2.0.0
  swarmpit: topmonks/swarmpit@1.2.0

commands:
  read_deployment_envs:
    parameters:
      site_name:
        type: string
    steps:
      - pulumi/login:
          cloud-url: s3://pulumi.tmcloud.io
      - run:
          name: Read Cloudfront ID from Pulumi state for << parameters.site_name >>
          command: |
            CLOUDFRONT_ID=$(pulumi stack output sites --stack topmonks-webs | jq -rM  '.["<< parameters.site_name >>"] | .cloudFrontId | @text')
            echo "export AWS_CLOUDFRONT_DISTRIBUTION_ID=\"${CLOUDFRONT_ID}\"" >> $BASH_ENV
  deploy_website:
    parameters:
      site_name:
        type: string
      distribution_id:
        type: string
        default: "${AWS_CLOUDFRONT_DISTRIBUTION_ID}"
      paths:
        type: string
        default: "/*"
      after_s3_sync:
        description: Steps that will be execute after S3 sync, but before Cloudfront distribution invalidation
        type: steps
        default: []
    steps:
      - read_deployment_envs:
          site_name: << parameters.site_name >>
      - aws-s3/sync:
          from: public/<< parameters.site_name >>
          to: s3://<< parameters.site_name >>
      - steps: << parameters.after_s3_sync >>
      - aws-cloudfront/invalidate:
          distribution_id: << parameters.distribution_id >>
          paths: << parameters.paths >>

jobs:
  build:
    executor:
      name: node/default
      tag: '14.13.1'
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - pulumi/login:
          cloud-url: s3://pulumi.tmcloud.io
      - node/install-packages:
          pkg-manager: yarn
          cache-version: v2
      - run: yarn build
      - run: |
          mkdir results
          yarn test
      - store_artifacts:
          path: ./results
      - store_test_results:
          path: ./results
      - persist_to_workspace:
          root: .
          paths: [ public ]

  provision:
    executor:
      name: node/default
      tag: '14.13.1'
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - pulumi/login:
          cloud-url: s3://pulumi.tmcloud.io
      - node/install-packages:
          pkg-manager: yarn
          cache-version: v2
          override-ci-command: yarn install --pure-lockfile --link-duplicates --production --no-progress --disable-pnp --no-default-rc
      - pulumi/update:
          stack: topmonks-webs
          skip-preview: true

  preview-provision:
    executor:
      name: node/default
      tag: '14.13.1'
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - pulumi/login:
          cloud-url: s3://pulumi.tmcloud.io
      - node/install-packages:
          pkg-manager: yarn
          cache-version: v2
          override-ci-command: yarn install --pure-lockfile --link-duplicates --production --no-progress --disable-pnp --no-default-rc
      - pulumi/preview:
          stack: topmonks-webs

  test_site:
    parameters:
      site_name:
        type: string
    executor:
      name: node/default
      tag: '14.13.1'
    working_directory: ~/topmonks-webs
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - node/install-packages:
          pkg-manager: yarn
          cache-version: v2
      - run:
          name: Install self-signed cert for localhost
          command: |
            sudo apt-get install libnss3-tools
            mkdir -p $HOME/.pki/nssdb
            certutil -d $HOME/.pki/nssdb -N --empty-password
            certutil -d sql:$HOME/.pki/nssdb -A -t TC -n lws-cert -i $(yarn -s node --print "require.resolve('lws/ssl/lws-cert.pem')")
            certutil -d sql:$HOME/.pki/nssdb -L
      - run:
          name: Serve site content
          command: yarn serve -d ./public/<< parameters.site_name >>
          background: true
      - run:
          name: Test site << parameters.site_name >>
          command: |
            mkdir -p ./results
            yarn test:ava
            cat websites.json | jq -rM '.["<< parameters.site_name >>"] | .["lhci"] as $ci | {$ci}' > patch.json
            jq --slurp 'reduce .[] as $item ({}; . * $item)' lighthouserc.json patch.json > .lighthouserc.json
            yarn lhci autorun --upload.extraHeaders.Authorization="Basic ${LHCI_BASIC_AUTH}" \
              --upload.urlReplacementPatterns="s/^/: << parameters.site_name >>/"
      - store_artifacts:
          path: ./results
      - store_artifacts:
          path: ./.lighthouseci
      - store_test_results:
          path: ./results

  deploy_site:
    parameters:
      site_name:
        type: string
      after_s3_sync:
        type: steps
        default: []
    executor: aws-cli/default
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: << parameters.site_name >>
          after_s3_sync: << parameters.after_s3_sync >>

  merge_pr:
    docker:
      - image: cimg/base:2020.12
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - github/install
      - github/merge_pr:
          rebase: true

workflows:
  build_and_deploy:
    jobs:
      - build:
          context: org-global
      - preview-provision:
          context: org-global
          filters:
            branches:
              ignore: trunk
      - provision:
          context: org-global
          filters:
            branches:
              only: trunk
#      - docker/publish:
#          name: publish-lhci
#          context: org-docker
#          docker-context: lhci.dev.tmcloud.io
#          path: lhci.dev.tmcloud.io
#          image: topmonks/lhci-server
#          tag: latest
#          filters:
#            branches:
#              only: trunk
#      - swarmpit/deploy:
#          name: deploy-lighthouse-ci
#          stack_name: lighthouse-ci
#          compose_file_path: lhci.dev.tmcloud.io/docker-compose.yml
#          context: org-swarmpit-dev
#          requires:
#            - publish-lhci
#          filters:
#            branches:
#              only: trunk
      - merge_pr:
          context: org-github
          requires:
            - preview-provision
            - test-www-topmonks-com
          filters:
            branches:
              only: /renovate\/.*/
      - test_site:
          name: test-www-topmonks-com
          site_name: www.topmonks.com
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-www-topmonks-com
          site_name: www.topmonks.com
          context: org-global
          requires:
            - provision
            - test-www-topmonks-com
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-blockchain-topmonks-com
          site_name: blockchain.topmonks.com
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-blockchain-topmonks-com
          site_name: blockchain.topmonks.com
          context: org-global
          requires:
            - provision
            - test-blockchain-topmonks-com
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-studio-topmonks-com
          site_name: studio.topmonks.com
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-studio-topmonks-com
          site_name: studio.topmonks.com
          context: org-global
          requires:
            - provision
            - test-studio-topmonks-com
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-www-topmonks-cz
          site_name: www.topmonks.cz
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-www-topmonks-cz
          site_name: www.topmonks.cz
          context: org-global
          requires:
            - provision
            - test-www-topmonks-cz
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-caffe-topmonks-cz
          site_name: caffe.topmonks.cz
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-caffe-topmonks-cz
          site_name: caffe.topmonks.cz
          context: org-global
          requires:
            - provision
            - test-caffe-topmonks-cz
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-prodeti-topmonks-cz
          site_name: prodeti.topmonks.cz
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-prodeti-topmonks-cz
          site_name: prodeti.topmonks.cz
          context: org-global
          requires:
            - provision
            - test-prodeti-topmonks-cz
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-session-monk-topmonks-com
          site_name: session-monk.topmonks.com
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-session-monk-topmonks-com
          site_name: session-monk.topmonks.com
          after_s3_sync:
            - run:
                name: Update MIME types
                command: |
                  aws s3 cp --exclude "*" --include "apple-app-site-association" \
                    --metadata-directive="REPLACE" --content-type="application/json; charset=utf-8" \
                    --recursive s3://session-monk.topmonks.com/ s3://session-monk.topmonks.com/
          context: org-global
          requires:
            - provision
            - test-session-monk-topmonks-com
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-monkslab-cz
          site_name: monkslab.cz
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-monkslab-cz
          site_name: monkslab.cz
          context: org-global
          requires:
            - provision
            - test-monkslab-cz
          filters:
            branches:
              only: trunk
      - deploy_site:
          name: deploy-www-hookamonk-com
          site_name: www.hookamonk.com
          context: org-global
          requires:
            - provision
            - build
          filters:
            branches:
              only: trunk
      - deploy_site:
          name: deploy-room-monks-cloud
          site_name: room.monks.cloud
          context: org-global
          requires:
            - provision
            - build
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-www-ingridapp-io
          site_name: www.ingridapp.io
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-www-ingridapp-io
          site_name: www.ingridapp.io
          context: org-global
          requires:
            - provision
            - test-www-ingridapp-io
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-arx-monks-cloud
          site_name: arx.monks.cloud
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-arx-monks-cloud
          site_name: arx.monks.cloud
          context: org-global
          requires:
            - provision
            - test-arx-monks-cloud
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-zive-tv
          site_name: zive.tv
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-zive-tv
          site_name: zive.tv
          context: org-global
          requires:
            - provision
            - test-zive-tv
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-cbx-cz
          site_name: cbx.cz
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-cbx-cz
          site_name: cbx.cz
          context: org-global
          requires:
            - provision
            - test-cbx-cz
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-chytrybox-cz
          site_name: chytrybox.cz
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-chytrybox-cz
          site_name: chytrybox.cz
          context: org-global
          requires:
            - provision
            - test-chytrybox-cz
          filters:
            branches:
              only: trunk
      - test_site:
          name: test-www-hackercamp-cz
          site_name: www.hackercamp.cz
          context: org-global
          requires:
            - build
      - deploy_site:
          name: deploy-www-hackercamp-cz
          site_name: www.hackercamp.cz
          context: org-global
          requires:
            - provision
            - test-www-hackercamp-cz
          filters:
            branches:
              only: trunk
